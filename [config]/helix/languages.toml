[language-server.deno-server]
  command = "deno"
  args = ["lsp"]
  [[config.inlayHints]]
  enable = true
  lint = true
  unstable = true
  enumMemberValues = { enabled = true }
  functionLikeReturnTypes = { enabled = true }
  parameterNames = { enabled = "all", suppressWhenArgumentMatchesName = true }
  parameterTypes = { enabled = true }
  propertyDeclarationTypes = { enabled = true }
  variableTypes = { enabled = true, suppressWhenTypeMatchesName = false }

[language-server.clangd]
  config = { "clangd.path" = "/opt/homebrew/opt/llvm/bin/clangd", "clangd.compilationDatabaseCandidates" = [ "${workspaceFolder}/build" ] }

[[language]]
name = "javascript"
scope = "source.js"
injection-regex = "^(js|javascript)$"
file-types = ["js", "jsx", "mjs"]
shebangs = ["deno", "node"]
roots = ["deno.json", "package.json", "tsconfig.json"]
language-id = "javascript" 
comment-token = "//"
language-servers = [ "deno-server" ]
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "jsx"
scope = "source.jsx"
injection-regex = "jsx"
file-types = ["jsx"]
shebangs = ["deno", "node"]
roots = ["deno.json", "package.json", "tsconfig.json"]
comment-token = "//"
language-id = "javascriptreact"
language-servers = [ "deno-server" ]
indent = { tab-width = 2, unit = "  " }
grammar = "javascript"

[[language]]
name = "typescript"
scope = "source.ts"
injection-regex = "^(ts|typescript)$"
file-types = ["ts"]
shebangs = ["deno", "node"]
roots = ["deno.json", "package.json", "tsconfig.json"]
language-servers = [ "deno-server" ]
language-id = "typescript"
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "tsx"
scope = "source.tsx"
injection-regex = "^(tsx)$"
file-types = ["tsx"]
shebangs = ["deno", "node"]
roots = ["deno.json", "package.json", "tsconfig.json"]
language-id = "typescriptreact"
language-servers = [ "deno-server" ]
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "json"
auto-format = true
indent = { tab-width = 4, unit = "  " }
